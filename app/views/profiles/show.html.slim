.container
  .row.justify-content-center
    .col-lg-8
      / User Profile Information
      .card.card-primary.mb-4.fade-in.card-decorative
        .card-header.bg-primary.text-white.p-4
          .d-flex.justify-content-between.align-items-center
            h2.h3.mb-0.font-bold.d-flex.align-items-center
              i.fas.fa-user-circle.me-2
              = @user.name
            - if user_signed_in? && @user == current_user
              = link_to "プロフィール編集", edit_profile_path, class: "btn btn-sm btn-light"
        .card-body.p-4
          .profile-info-item
            .profile-icon
              i.fas.fa-id-card
            .profile-label 名前
            .profile-value = @user.name

          .separator-gradient

          .profile-info-item
            .profile-icon
              i.fas.fa-code
            .profile-label 好きな言語
            .profile-value = @user.favorite_language.present? ? @user.favorite_language : "ー"

          .separator-gradient

          .profile-info-item
            .profile-icon
              i.fas.fa-flask
            .profile-label 希望・所属研究室
            .profile-value = @user.research_lab.present? ? @user.research_lab : "ー"

          .separator-gradient

          .profile-info-item
            .profile-icon
              i.fas.fa-briefcase
            .profile-label インターン・説明会参加回数
            .profile-value = @user.internship_count.present? ? "#{@user.internship_count}回" : "ー"

          .separator-gradient

          .profile-info-item
            .profile-icon
              i.fas.fa-comment-dots
            .profile-label 一言
            .profile-value
              - if @user.personal_message.present?
                = simple_format(h(@user.personal_message), {}, wrapper_tag: "span")
              - else
                | ー

          .separator-gradient

          .profile-info-item
            .profile-icon
              i.fas.fa-calendar-check
            .profile-label 登録日
            .profile-value = @user.created_at.strftime("%Y年%m月%d日")

      / Activity Heatmap
      .card.card-primary.mb-4.fade-in
        .card-header.bg-info.text-white.p-3
          h3.h5.mb-0.font-semibold
            i.far.fa-calendar-alt.me-2
            | 投稿活動チャート
        .card-body.p-4
          = render "heatmap", user: @user, date: @date, date_6_months_ago: @date_6_months_ago, active_user_counts: @active_user_counts_6_months

      / User's Posts
      .card.card-primary.fade-in
        .card-body.p-4
          .d-flex.justify-content-between.align-items-center.mb-2
            h3.h5.mb-0.font-semibold
              i.fas.fa-book.me-2
              | commit log (#{@posts.count}件)
          hr.my-3

          - if @posts.any?
            - @posts.each do |post|
              .border.rounded.p-3.mb-3.bg-gray-100
                / ヘッダー（投稿日時）
                .d-flex.justify-content-end.align-items-center.mb-2
                  span.text-muted.text-sm
                    i.far.fa-clock.me-1
                    = post.created_at.strftime("%Y/%m/%d %H:%M")

                / 投稿内容
                .mb-2.line-height-relaxed
                  = simple_format(h(post.content))

                / タグ表示
                - if post.tags.any?
                  .mb-3
                    .d-flex.flex-wrap.gap-1
                      - post.tags.each do |tag|
                        = link_to tag_path(tag.id), class: "text-decoration-none" do
                          span.badge.bg-light.text-dark ##{tag.name}

                / フッター（いいねボタンとアクションボタン）
                .d-flex.justify-content-between.align-items-center.pt-2.border-top
                  / いいねボタン
                  .d-flex.align-items-center
                    = render 'shared/like_button', post: post

                  / アクションボタン（自分の投稿のみ表示）
                  - if user_signed_in? && post.user == current_user
                    .d-flex.gap-2
                      = link_to edit_post_path(post), class: "btn btn-outline-secondary btn-sm" do
                        i.fas.fa-edit.me-1
                        | rebase
                      = button_to post, method: :delete, class: "btn btn-outline-danger btn-sm", data: { confirm: "本当にrevertしますか？" } do
                        i.fas.fa-trash-alt.me-1
                        | revert
          - else
            .text-center.py-5.text-muted
              i.far.fa-sticky-note.display-4.mb-3
              p.mb-0 まだ投稿がありません
              p.text-sm 最初の投稿をしてみましょう！
              - if user_signed_in?
                = link_to "新しい投稿", new_post_path, class: "btn btn-gradient-primary mt-2"
              - else
                = link_to "新しい投稿", new_user_session_path, class: "btn btn-gradient-primary mt-2", data: { confirm: "投稿するにはログインが必要です。ログインページに移動しますか？" }
